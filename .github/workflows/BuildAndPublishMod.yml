name: tModLoader Steam Workshop Integration

on:
  workflow_call:
    inputs:
      MODNAME:
        description: The internal name of the mod. Defaults to the repository name.
        required: false
        type: string
        default: ${{ github.event.repository.name }}
      UploadArtifact:
        description: Determines if the .tmod file should be uploaded as a build artifact for all commits. This .tmod can be used by testers before an actual update is published to the Steam workshop. Defaults to true.
        required: false
        type: boolean
        default: true
    secrets:
      STEAM_SENTRY_FILENAME:
        required: true
      STEAM_SENTRY_FILE:
        required: true

jobs:
  BuildAndPublish:
    name: Build .tmod and publish if version updated
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Setup steamcmd
        id: setupsteam
        uses: CyberAndrii/setup-steamcmd@v1

      - name: View steam install folder
        shell: bash
        run: |
          echo pwd is: ${PWD}
          ls -l
        working-directory: ${{ steps.setupsteam.outputs.directory }}
      
      - name: Setup Authentication Files
        shell: bash
        working-directory: ${{ steps.setupsteam.outputs.directory }}
        run: |
          echo pwd is: ${PWD}
          echo "$STEAM_SENTRY_FILE" > encoded_ssfn
          Certutil -decode encoded_ssfn $STEAM_SENTRY_FILENAME
          Certutil -hashfile $STEAM_SENTRY_FILENAME
          ls -l
        env:
          STEAM_SENTRY_FILENAME: ${{ secrets.STEAM_SENTRY_FILENAME }}
          STEAM_SENTRY_FILE: ${{ secrets.STEAM_SENTRY_FILE }}

      - name: Install tModLoader public-1.4-alpha via Steam
        shell: bash
        run: |
          echo pwd is: ${PWD}
          steamcmd.exe +login anonymous +quit
          ls -l
        
      - name: View steam install folder again
        shell: bash
        run: |
          echo pwd is: ${PWD}
          ls -l
        working-directory: ${{ steps.setupsteam.outputs.directory }}
      
      - name: Echo Inputs
        shell: bash
        run: |
          echo pwd is: ${PWD}
          echo MODNAME is: ${MODNAME}
          echo UploadArtifact is: ${UploadArtifact}
          echo hello > Test.txt
          ls -l
          dotnet --version
        env:
          MODNAME: ${{ inputs.MODNAME }}
          UploadArtifact: ${{ inputs.UploadArtifact }}
          
      - name: Upload Release Build Artifact
        if: ${{ inputs.UploadArtifact }}
        uses: actions/upload-artifact@v2
        with:
          name: .tmod file
          path: Test.txt
