name: tModLoader Automatic Mod Browser Publish
author: Javid Pack (@JavidPack)
description: When build.txt is updated with new version, automatically build and publish to tModLoader Mod Browser.

inputs:
    STEAMID64:
        description: steamid64 to use for publishing. Account must be owner or maintainer of the mod.
        required: true
    MODBROWSERPASSPHRASE:
        description: Mod Browser Passphrase corresponding to the provided steamid64. Please make sure to use the Secrets in Github, do not write your passphrase in plain text in your workflow file.
        required: true
    MODNAME:
        description: The internal name of the mod.
        required: true

runs:
  using: "composite"
  steps: 
    - name: Print a greeting
      run: |
        echo If you see this, it is working.
        pwd
      shell: bash

    - name: Determine if build.txt is newer than Mod Browser
      run: python $GITHUB_ACTION_PATH/test.py
      shell: bash
      env:
        INPUT_STEAMID64: ${{ inputs.STEAMID64 }}
        INPUT_MODBROWSERPASSPHRASE: ${{ inputs.MODBROWSERPASSPHRASE }}
        INPUT_MODNAME: ${{ inputs.MODNAME }}
      
    - name: Build and Publish Mod if newer
      run: |
        if [ -z "$MODNAME" ]; then
          echo "MODNAME Not provided, mod publish failure."
          exit
        fi
        if [ "$PUBLISH_NEEDED" != "yes" ]; then
          echo "Publish Not Needed, skipping step."
          exit
        fi
        echo PUBLISH_NEEDED is $PUBLISH_NEEDED
        echo INPUT_MODNAME is $INPUT_MODNAME
        echo Checking Mono version
        mono -V
        echo pwd is: ${PWD}
        echo ls -l is:
        ls -l
        echo CD to Home
        cd $HOME
        mkdir tModLoader
        cd tModLoader
        echo Downloading tModLoader
        wget -q https://github.com/tModLoader/tModLoader/releases/download/v0.11.7.5/tModLoader.Linux.v0.11.7.5.tar.gz
        tar xvzfq tModLoader.Linux*.tar.gz
        echo Downloading ModCompile
        curl -s -L https://github.com/tModLoader/tModLoader/releases/download/v0.11.7.5/ModCompile_XNA.zip -o ModCompile.zip
        mkdir ModCompile
        unzip -q ModCompile.zip -d ./ModCompile
        echo Upgrade to tModLoader-mono
        cp ./tModLoader-mono ./tModLoaderServer
        touch savehere.txt
        mkdir -p ModLoader/Mod\ Sources/
        echo pwd is: ${PWD}
        echo ls -l is:
        ls -l
        echo Copy Workspace to correct foldername for build
        cp -r $GITHUB_WORKSPACE ModLoader/Mod\ Sources/TutorialMod
        echo Build Mod
        chmod +x tModLoaderServer.bin.x86_64
        tModLoaderServer -build ModLoader/Mod\ Sources/TutorialMod
        cd ModLoader/Mods
        echo pwd is:
        pwd
        echo ls -l is:
        ls -l
      shell: bash
      env:
        INPUT_MODNAME: ${{ inputs.MODNAME }}

branding:
    icon: server
    color: blue
